<div id="controls">
  <input type="text" ID="Location" />
  <button onclick="getLocation()">Current Location</button>
</div>
<!-- this div will hold your map -->
<div id="mapAddressesWrapper">
  <div id="map"></div>
  <div id="addresses"></div>
</div>

<!-- this div will hold your store info -->
<div id="info_div"></div>

<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAielYs15pnUpfg2UMQib4ldlJjL-aE8cE&callback=initMap&libraries=places" async defer></script>
<script>
	var map = null;
	var markers = [];
	var infoWindow = null;

	function findLocation() {
		
	}

	function getLocation() {
		if (navigator.geolocation) {
			navigator.geolocation.getCurrentPosition(showPosition);
			//navigator.geolocation.watchPosition(showPosition);
		} else {
			alert("Geolocation is not supported by this browser.");
		}
	}

	function showPosition(position) {
		setCenter(position.coords.latitude, position.coords.longitude);		
	}

	function setCenter(lat, lng) {
		map.setCenter({ lat: lat, lng: lng });
		addMarker(lat, lng, null, "https://developers.google.com/maps/documentation/javascript/examples/full/images/beachflag.png");
	}

	function initMap() {

		getLocation();

		var myMapCenter = {lat: 40.785091, lng: -73.968285};

		// Create a map object and specify the DOM element for display.
		map = new google.maps.Map(document.getElementById('map'), {
			center: myMapCenter,
			zoom: 14
		});

		map.addListener("bounds_changed", function(){
			$("#addresses [data-number]").hide();

			for (var i=0; i < markers.length; i++) 
			{
					if(map.getBounds().contains(markers[i].getPosition()))
					{
							var number = markers[i].number;							
							$("[data-number='"+number+"']").show();
					}
			}			
		})

		infoWindow = new google.maps.InfoWindow({
			content: ""
		});

		BindStores();

		searchBox = new google.maps.places.SearchBox(document.getElementById("Location"));

		searchBox.addListener("places_changed", function () {
			var place = searchBox.getPlaces()[0];

			var lat = place.geometry.location.lat();
			var lng = place.geometry.location.lng();

			setCenter(lat, lng);

		});

	}

	function BindStores() {
		$.get("https://www.awholdings.ca/services/api/stores", function (data) {

			data.forEach((item, index) => {
				markStore(item);
			});

		});
	}

	function ShowInfoWindow(marker, storeInfo) {

		var template = getTemplate(storeInfo);

		infoWindow.setContent(template);

		infoWindow.open(map, marker);
	}

	function markStore(storeInfo){
		addMarker(storeInfo.latitude, storeInfo.longitude, storeInfo)
	}

	function addMarker(lat, long, storeInfo, markerIconUrl) {

		var name = "";

		if (storeInfo != null && storeInfo != undefined) {
			name = storeInfo.name;
		}

		// Create a marker and set its position.
		var marker = new google.maps.Marker({
			map: map,
			position: {lat: lat, lng: long},
			title: name,
			icon: markerIconUrl,	
			number: (storeInfo == null || storeInfo.number == null)? 0: storeInfo.number
		});
		

		if (storeInfo != null && storeInfo != undefined) {
			// show store info when marker is clicked
			marker.addListener('click', function () {
				//ShowInfoWindow(marker, storeInfo);
				selectAddress(storeInfo);
			});

      addAddressToAddressList(storeInfo);
		}

		markers.push(marker);
	}

	function selectAddress(storeInfo){
		var element = $("#addresses .address[data-number="+storeInfo.number+"]");

		$("#addresses .address").removeClass("selected");
		element.addClass("selected");

		element[0].scrollIntoView();
	}

  function getTemplate(storeInfo){
		var hoursTemplate = "";

		storeInfo.hours.forEach((obj, index) => {	
			if(obj.isClosed)
			{
				hoursTemplate += obj.day + " ( CLOSED )<br />";
			}
			else
			{
				hoursTemplate += obj.day + " ( " + obj.open + " - " + obj.close + " )<br />";			
			}
		});    

		var template = `
			<div class="address" data-number="`+storeInfo.number+`" data-lat="`+storeInfo.latitude+`" data-lng="`+storeInfo.longitude+`">
				<h4>`+ storeInfo.name +`</h4>
				<p>`+ storeInfo.address2 + " " + storeInfo.address + "<br />" + storeInfo.city +`</p>
				<h5>Hours</h5>
				`+hoursTemplate+`
			</div>
		`;     

    return template;
  }

  function addAddressToAddressList(storeInfo)
  {
		if (storeInfo == null || storeInfo == undefined)
    {
      return;
    }

    var template = getTemplate(storeInfo);

    $("#addresses").append(template);
  }
</script>

<style type="text/css">

/* map needs width and height to appear */
#map{
	width: 100%;
	max-width: 100%;
	height: 600px;
}

#controls{
  width: 100%;
}

#controls input[type=text]{
  width: 300px;
}

#mapAddressesWrapper{
  display: flex;
  flex-direction: row;
}

#map{
  flex: 1;
}

#addresses{
  overflow: scroll;
  height: 600px;
  flex: 0.5;
}

.address{
  margin: 0 10px;
  padding: 10px 10px;
}


#addresses .selected{
	background-color: yellow;
}



</style>